package com.samples.transactionflows.appmodule;

import com.samples.transactionflows.appmodule.common.TransactionFlowAppModule;

import java.io.PrintWriter;

import java.util.Enumeration;

import oracle.adf.model.BindingContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.common.ampool.ApplicationPool;
import oracle.jbo.common.ampool.PoolMgr;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 13 18:05:21 EDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransactionFlowAppModuleImpl extends ApplicationModuleImpl implements TransactionFlowAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public TransactionFlowAppModuleImpl() {
    }

    /**
     * Container's getter for CountriesView1.
     * @return CountriesView1
     */
    public ViewObjectImpl getCountriesView1() {
        
        return (ViewObjectImpl)findViewObject("CountriesView1");
    }

    /**
     * Container's getter for DepartmentsView1.
     * @return DepartmentsView1
     */
    public ViewObjectImpl getDepartmentsView1() {
        return (ViewObjectImpl)findViewObject("DepartmentsView1");
    }

    /**
     * Container's getter for EmployeesView1.
     * @return EmployeesView1
     */
    public ViewObjectImpl getEmployeesView1() {
        return (ViewObjectImpl)findViewObject("EmployeesView1");
    }

    /**
     * Container's getter for LocationsView1.
     * @return LocationsView1
     */
    public ViewObjectImpl getLocationsView1() {
        return (ViewObjectImpl)findViewObject("LocationsView1");
    }

    /**
     * Container's getter for EmployeesView2.
     * @return EmployeesView2
     */
    public ViewObjectImpl getEmployeesView2() {
        return (ViewObjectImpl)findViewObject("EmployeesView2");
    }

    /**
     * Container's getter for EmployeesView3.
     * @return EmployeesView3
     */
    public ViewObjectImpl getEmployeesView3() {
        return (ViewObjectImpl)findViewObject("EmployeesView3");
    }

    /**
     * Container's getter for DepartmentsView2.
     * @return DepartmentsView2
     */
    public ViewObjectImpl getDepartmentsView2() {
        return (ViewObjectImpl)findViewObject("DepartmentsView2");
    }

    /**
     * Container's getter for DepartmentsView3.
     * @return DepartmentsView3
     */
    public ViewObjectImpl getDepartmentsView3() {
        return (ViewObjectImpl)findViewObject("DepartmentsView3");
    }

    /**
     * Container's getter for LocationsView2.
     * @return LocationsView2
     */
    public ViewObjectImpl getLocationsView2() {
        return (ViewObjectImpl)findViewObject("LocationsView2");
    }

    /**
     * Container's getter for EmpManagerFkLink1.
     * @return EmpManagerFkLink1
     */
    public ViewLinkImpl getEmpManagerFkLink1() {
        return (ViewLinkImpl)findViewLink("EmpManagerFkLink1");
    }

    /**
     * Container's getter for EmpDeptFkLink1.
     * @return EmpDeptFkLink1
     */
    public ViewLinkImpl getEmpDeptFkLink1() {
        return (ViewLinkImpl)findViewLink("EmpDeptFkLink1");
    }

    /**
     * Container's getter for DeptMgrFkLink1.
     * @return DeptMgrFkLink1
     */
    public ViewLinkImpl getDeptMgrFkLink1() {
        return (ViewLinkImpl)findViewLink("DeptMgrFkLink1");
    }

    /**
     * Container's getter for DeptLocFkLink1.
     * @return DeptLocFkLink1
     */
    public ViewLinkImpl getDeptLocFkLink1() {
        return (ViewLinkImpl)findViewLink("DeptLocFkLink1");
    }

    /**
     * Container's getter for LocCIdFkLink1.
     * @return LocCIdFkLink1
     */
    public ViewLinkImpl getLocCIdFkLink1() {
        return (ViewLinkImpl)findViewLink("LocCIdFkLink1");
    }
    public oracle.jbo.ApplicationModule createApplicationModule(java.lang.String p1, java.lang.String p2) { 
        
        System.err.println("******** New App Module Created****");
        return super.createApplicationModule(p1, p2);
    }
    public void dumpAppModuleStatistics(){
        BindingContext.getCurrent().dataControlFrame().getName();
      //  this.getAMStatistics().getStatisticsInfo(arg0)
  //      this.getDBTransaction().
        // get the pool manager
             PoolMgr poolMgr = PoolMgr.getInstance();
             // get the pools managed
             Enumeration keys = poolMgr.getResourcePoolKeys();
             if (keys != null) {
                 if (keys.hasMoreElements()) {
                     // may manage many pools, we will get the name of first one managed
                     String poolname = (String)keys.nextElement();
                     System.out.println("AM pool name: " + poolname);
                     // get the AM pool
                     ApplicationPool pool =
                         (ApplicationPool)poolMgr.getResourcePool(poolname);
                    
                     // log AM pool diagnostics
                     PrintWriter out = new PrintWriter(System.out, true);
                     pool.dumpPoolStatistics(new PrintWriter(out));
                     out.flush();
                 }
             }  
    }
    
}
